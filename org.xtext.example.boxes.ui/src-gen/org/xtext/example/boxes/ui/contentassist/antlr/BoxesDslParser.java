/*
 * generated by Xtext
 */
package org.xtext.example.boxes.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.boxes.services.BoxesDslGrammarAccess;

public class BoxesDslParser extends AbstractContentAssistParser {
	
	@Inject
	private BoxesDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.boxes.ui.contentassist.antlr.internal.InternalBoxesDslParser createParser() {
		org.xtext.example.boxes.ui.contentassist.antlr.internal.InternalBoxesDslParser result = new org.xtext.example.boxes.ui.contentassist.antlr.internal.InternalBoxesDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getBoxAccess().getGroup(), "rule__Box__Group__0");
					put(grammarAccess.getBoxAccess().getGroup_4(), "rule__Box__Group_4__0");
					put(grammarAccess.getBoxAccess().getGroup_4_3(), "rule__Box__Group_4_3__0");
					put(grammarAccess.getBoxAccess().getGroup_5(), "rule__Box__Group_5__0");
					put(grammarAccess.getBoxAccess().getGroup_5_3(), "rule__Box__Group_5_3__0");
					put(grammarAccess.getBoxAccess().getGroup_6(), "rule__Box__Group_6__0");
					put(grammarAccess.getBoxAccess().getGroup_6_3(), "rule__Box__Group_6_3__0");
					put(grammarAccess.getPortAccess().getGroup(), "rule__Port__Group__0");
					put(grammarAccess.getConnectionAccess().getGroup(), "rule__Connection__Group__0");
					put(grammarAccess.getConnectionAccess().getGroup_5(), "rule__Connection__Group_5__0");
					put(grammarAccess.getConnectionAccess().getGroup_7(), "rule__Connection__Group_7__0");
					put(grammarAccess.getConnectionAccess().getGroup_7_3(), "rule__Connection__Group_7_3__0");
					put(grammarAccess.getBoxInstanceAccess().getGroup(), "rule__BoxInstance__Group__0");
					put(grammarAccess.getBoxInstanceAccess().getGroup_4(), "rule__BoxInstance__Group_4__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getBoxAccess().getNameAssignment_2(), "rule__Box__NameAssignment_2");
					put(grammarAccess.getBoxAccess().getPortsAssignment_4_2(), "rule__Box__PortsAssignment_4_2");
					put(grammarAccess.getBoxAccess().getPortsAssignment_4_3_1(), "rule__Box__PortsAssignment_4_3_1");
					put(grammarAccess.getBoxAccess().getBoxInstancesAssignment_5_2(), "rule__Box__BoxInstancesAssignment_5_2");
					put(grammarAccess.getBoxAccess().getBoxInstancesAssignment_5_3_1(), "rule__Box__BoxInstancesAssignment_5_3_1");
					put(grammarAccess.getBoxAccess().getConnectionsAssignment_6_2(), "rule__Box__ConnectionsAssignment_6_2");
					put(grammarAccess.getBoxAccess().getConnectionsAssignment_6_3_1(), "rule__Box__ConnectionsAssignment_6_3_1");
					put(grammarAccess.getPortAccess().getNameAssignment_2(), "rule__Port__NameAssignment_2");
					put(grammarAccess.getConnectionAccess().getIntPortsAssignment_4(), "rule__Connection__IntPortsAssignment_4");
					put(grammarAccess.getConnectionAccess().getIntPortsAssignment_5_1(), "rule__Connection__IntPortsAssignment_5_1");
					put(grammarAccess.getConnectionAccess().getExtPortsAssignment_7_2(), "rule__Connection__ExtPortsAssignment_7_2");
					put(grammarAccess.getConnectionAccess().getExtPortsAssignment_7_3_1(), "rule__Connection__ExtPortsAssignment_7_3_1");
					put(grammarAccess.getBoxInstanceAccess().getBoxRefAssignment_3(), "rule__BoxInstance__BoxRefAssignment_3");
					put(grammarAccess.getBoxInstanceAccess().getInstanceNameAssignment_4_1(), "rule__BoxInstance__InstanceNameAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.boxes.ui.contentassist.antlr.internal.InternalBoxesDslParser typedParser = (org.xtext.example.boxes.ui.contentassist.antlr.internal.InternalBoxesDslParser) parser;
			typedParser.entryRuleBox();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BoxesDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BoxesDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
