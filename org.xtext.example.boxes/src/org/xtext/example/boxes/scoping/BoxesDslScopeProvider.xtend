/*
 * generated by Xtext
 */
package org.xtext.example.boxes.scoping

import boxes.Box
import boxes.Connection
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.naming.QualifiedName
import org.eclipse.xtext.resource.EObjectDescription
import org.eclipse.xtext.resource.IEObjectDescription
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import org.eclipse.xtext.scoping.impl.SimpleScope
import boxes.BoxInstance

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 *
 */
class BoxesDslScopeProvider extends AbstractDeclarativeScopeProvider {
	
	def scope_Connection_intPorts(Connection context, EReference r) {
		val boxInstance = context.eContainer as BoxInstance
		val descs = <IEObjectDescription>newArrayList
		
			for (p : boxInstance.boxRef.ports) {
				descs.add(EObjectDescription.create(QualifiedName.create(p.name), p))
			}

		return new SimpleScope(IScope.NULLSCOPE, descs, false)
	}
		
	def scope_Connection_extPorts(Connection context, EReference r) {
		val boxInstance = context.eContainer as BoxInstance
		val box = boxInstance.eContainer as Box
		val descs = <IEObjectDescription>newArrayList
		
		for (p : box.ports) {
			descs.add(EObjectDescription.create(QualifiedName.create(p.name), p))
		}
		return new SimpleScope(IScope.NULLSCOPE, descs, false)
		}

}
