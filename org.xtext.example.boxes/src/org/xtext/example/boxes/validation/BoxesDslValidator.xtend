/*
 * generated by Xtext
 */
package org.xtext.example.boxes.validation

import boxes.BoxesPackage
import boxes.Box
import org.eclipse.xtext.validation.Check
import boxes.BoxInstance

//import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class BoxesDslValidator extends AbstractBoxesDslValidator {

	public static val INVALID_BOX_NAME = 'org.xtext.example.boxes.invalidBoxName'
	public static val INVALID_BOX_INSTANCE_INSTANCE_NAME = 'org.xtext.example.boxes.invalidBoxInstanceInstanceName'
	public static val INVALID_BOX_REF = 'org.xtext.example.boxes.invalidBoxRef'

	@Check
	def checkBoxStartsWithCapital(Box box) {
		if (!Character.isUpperCase(box.name.charAt(0))) {
			warning('Box names should start with a capital', 
					BoxesPackage.Literals.BOX__NAME,
					INVALID_BOX_NAME, box.name)
		}
	}
	
	@Check
	def checkBoxInstanceStartsWithLower(BoxInstance boxInstance) {
		if (!Character.isLowerCase(boxInstance.instanceName.charAt(0))) {
			warning('BoxInstance instanceNames should start with a lowercase', 
					BoxesPackage.Literals.BOX_INSTANCE__INSTANCE_NAME,
					INVALID_BOX_INSTANCE_INSTANCE_NAME, boxInstance.instanceName)
		}
	}
	
	@Check
	def checkBoxSelfInstance(BoxInstance boxInstance) {
		val box = boxInstance.eContainer as Box
		if (boxInstance.boxRef.name.equals(box.name)) {
			error('Boxes cannot instantiate themselves',
				BoxesPackage.Literals.BOX_INSTANCE__BOX_REF,
				INVALID_BOX_REF, boxInstance.boxRef.name)
		}
	}

}
