/*
 * generated by Xtext
 */
grammar InternalBoxesDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.boxes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.boxes.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.boxes.services.BoxesDslGrammarAccess;

}

@parser::members {

 	private BoxesDslGrammarAccess grammarAccess;
 	
    public InternalBoxesDslParser(TokenStream input, BoxesDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Box";	
   	}
   	
   	@Override
   	protected BoxesDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	 iv_ruleBox=ruleBox 
	 { $current=$iv_ruleBox.current; } 
	 EOF 
;

// Rule Box
ruleBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBoxAccess().getBoxAction_0(),
            $current);
    }
)	otherlv_1='Box' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoxAccess().getBoxKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='ports' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBoxAccess().getPortsKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getPortsPortParserRuleCall_4_2_0()); 
	    }
		lv_ports_6_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_6_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBoxAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getPortsPortParserRuleCall_4_3_1_0()); 
	    }
		lv_ports_8_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_8_0, 
        		"Port");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_10='boxInstances' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBoxAccess().getBoxInstancesKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getBoxInstancesBoxInstanceParserRuleCall_5_2_0()); 
	    }
		lv_boxInstances_12_0=ruleBoxInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		add(
       			$current, 
       			"boxInstances",
        		lv_boxInstances_12_0, 
        		"BoxInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBoxAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getBoxInstancesBoxInstanceParserRuleCall_5_3_1_0()); 
	    }
		lv_boxInstances_14_0=ruleBoxInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		add(
       			$current, 
       			"boxInstances",
        		lv_boxInstances_14_0, 
        		"BoxInstance");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_16='connections' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBoxAccess().getConnectionsKeyword_6_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getBoxAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getConnectionsConnectionParserRuleCall_6_2_0()); 
	    }
		lv_connections_18_0=ruleConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_18_0, 
        		"Connection");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBoxAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getConnectionsConnectionParserRuleCall_6_3_1_0()); 
	    }
		lv_connections_20_0=ruleConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_20_0, 
        		"Connection");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getBoxAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRulePort
entryRulePort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	 iv_rulePort=rulePort 
	 { $current=$iv_rulePort.current; } 
	 EOF 
;

// Rule Port
rulePort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPortAccess().getPortAction_0(),
            $current);
    }
)	otherlv_1='Port' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortAccess().getPortKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	 iv_ruleConnection=ruleConnection 
	 { $current=$iv_ruleConnection.current; } 
	 EOF 
;

// Rule Connection
ruleConnection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Connection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConnectionAccess().getConnectionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='intPorts' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConnectionAccess().getIntPortsKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConnectionAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getIntPortsPortCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConnectionAccess().getCommaKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getIntPortsPortCrossReference_5_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConnectionAccess().getRightParenthesisKeyword_6());
    }
(	otherlv_8='extPorts' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConnectionAccess().getExtPortsKeyword_7_0());
    }
	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConnectionAccess().getLeftParenthesisKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getExtPortsPortCrossReference_7_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConnectionAccess().getCommaKeyword_7_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getExtPortsPortCrossReference_7_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getConnectionAccess().getRightParenthesisKeyword_7_4());
    }
)?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleBoxInstance
entryRuleBoxInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoxInstanceRule()); }
	 iv_ruleBoxInstance=ruleBoxInstance 
	 { $current=$iv_ruleBoxInstance.current; } 
	 EOF 
;

// Rule BoxInstance
ruleBoxInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BoxInstance' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoxInstanceAccess().getBoxInstanceKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoxInstanceAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='boxRef' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoxInstanceAccess().getBoxRefKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoxInstanceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBoxInstanceAccess().getBoxRefBoxCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='instanceName' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBoxInstanceAccess().getInstanceNameKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxInstanceAccess().getInstanceNameEStringParserRuleCall_4_1_0()); 
	    }
		lv_instanceName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxInstanceRule());
	        }
       		set(
       			$current, 
       			"instanceName",
        		lv_instanceName_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBoxInstanceAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


